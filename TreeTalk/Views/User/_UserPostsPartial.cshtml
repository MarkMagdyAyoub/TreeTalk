@model TreeTalk.Model.ViewModels.PostFeedViewModel
<div class="container py-5">
    @foreach (var postWithComments in Model.PostsWithComments)
    {
        var post = postWithComments.Post;
        <div class="card shadow-sm rounded-4 mb-4 post-card fade-in">
            <div class="card-body">
                <h4 class="card-title fw-bold mb-2 text-primary">@post.Title</h4>
                <p class="card-text fs-6">@post.Content</p>

                @if (!string.IsNullOrEmpty(post.ImageUrl))
                {
                    var modalId = $"imageModal_{post.Id}";
                    <div class="post-image-wrapper my-3">
                        <img src="@post.ImageUrl"
                             alt="Post Image"
                             class="img-fluid w-100 post-image"
                             loading="lazy"
                             style="cursor: zoom-in"
                             data-bs-toggle="modal"
                             data-bs-target="#@modalId" />
                    </div>

                    <div class="modal fade" id="@modalId" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-xl">
                            <div class="modal-content bg-transparent border-0 shadow-none">
                                <div class="modal-body p-0 d-flex justify-content-center">
                                    <img src="@post.ImageUrl" class="img-fluid rounded-4" alt="Full Image" />
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="d-flex justify-content-between align-items-center">
                    <div class="text-muted small">
                        👤 @post.Author?.Username · 📅 @post.CreatedAt.ToString("g")
                    </div>
                    <div class="d-flex gap-2 align-items-center">
                        <button class="btn btn-outline-success btn-sm rounded-pill shadow-sm like-btn"
                                data-post-id="@post.Id"
                                data-user-id="@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value"
                                data-like-url="@Url.Action("LikePost", "Posts")">
                            <i class="bi bi-hand-thumbs-up"></i>
                            <span class="like-count">@post.Likes</span> Likes
                        </button>
                        <button class="btn btn-outline-primary btn-sm rounded-pill shadow-sm comment-toggle-btn"
                                data-post-id="@post.Id">
                            <i class="bi bi-chat-text"></i>
                            <span class="comments-count">@postWithComments.Comments.Count()</span> Comments
                            <i class="bi bi-chevron-down ms-1 toggle-icon"></i>
                        </button>
                    </div>
                </div>

                <div class="comments-container d-none mt-3" id="comments-@post.Id">
                    <div class="comment-form mb-3">
                        <form method="post" asp-controller="Posts" asp-action="Add" class="d-flex gap-2">
                            <input type="hidden" name="PostId" value="@post.Id" />
                            <input type="hidden" name="ParentId" value="" />
                            <input type="text" name="Content" class="form-control shadow-sm" placeholder="💬 Add a comment..." required />
                            <button type="submit" class="btn btn-outline-primary shadow-sm px-3">Reply</button>
                        </form>
                    </div>

                    <div class="comments-section">
                        <h6 class="fw-semibold mb-3">💬 Comments</h6>
                        @{
                            ViewData["PostId"] = post.Id;
                            var allComments = postWithComments.Comments;
                        }
                        <partial name="_CommentTree" model="Tuple.Create<IEnumerable<TreeTalkModel.Model.Entities.DTOs.CommentTreeDto>, int?>(allComments, null)" />
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-5">
        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("GetUserPostsPage", "User", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })"
               class="btn btn-outline-primary rounded-pill shadow-sm">
                <i class="bi bi-chevron-left"></i> Previous
            </a>
        }
        else
        {
            <div></div>
        }


        @if (Model.TotalPages < Model.TotalPages)
        {
            <a href="@Url.Action("GetUserPostsPage", "User", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })"
               class="btn btn-outline-primary rounded-pill shadow-sm">
                Next <i class="bi bi-chevron-right"></i>
            </a>
        }
        else
        {
            <div></div>
        }
    </div>
</div>

