// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TreeTalkModel.Model.Data;

#nullable disable

namespace TreeTalk.Migrations
{
    [DbContext(typeof(TreeTalkDbContext))]
    partial class TreeTalkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TreeTalk.Model.Entities.CommentLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId", "CommentId")
                        .IsUnique();

                    b.ToTable("CommentLike", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CommentId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CommentId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CommentId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CommentId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            CommentId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            CommentId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CommentId = 9,
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            CommentId = 9,
                            UserId = 6
                        },
                        new
                        {
                            Id = 10,
                            CommentId = 6,
                            UserId = 7
                        },
                        new
                        {
                            Id = 11,
                            CommentId = 6,
                            UserId = 8
                        },
                        new
                        {
                            Id = 12,
                            CommentId = 7,
                            UserId = 9
                        },
                        new
                        {
                            Id = 13,
                            CommentId = 7,
                            UserId = 10
                        },
                        new
                        {
                            Id = 14,
                            CommentId = 47,
                            UserId = 11
                        },
                        new
                        {
                            Id = 15,
                            CommentId = 47,
                            UserId = 12
                        },
                        new
                        {
                            Id = 16,
                            CommentId = 47,
                            UserId = 13
                        },
                        new
                        {
                            Id = 17,
                            CommentId = 48,
                            UserId = 14
                        },
                        new
                        {
                            Id = 18,
                            CommentId = 48,
                            UserId = 15
                        },
                        new
                        {
                            Id = 19,
                            CommentId = 84,
                            UserId = 16
                        },
                        new
                        {
                            Id = 20,
                            CommentId = 84,
                            UserId = 17
                        },
                        new
                        {
                            Id = 21,
                            CommentId = 84,
                            UserId = 18
                        },
                        new
                        {
                            Id = 22,
                            CommentId = 84,
                            UserId = 19
                        },
                        new
                        {
                            Id = 23,
                            CommentId = 85,
                            UserId = 20
                        },
                        new
                        {
                            Id = 24,
                            CommentId = 85,
                            UserId = 1
                        },
                        new
                        {
                            Id = 25,
                            CommentId = 85,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TreeTalk.Model.Entities.PostLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId", "PostId")
                        .IsUnique();

                    b.ToTable("PostLike", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            PostId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            PostId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            PostId = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            PostId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            PostId = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 8,
                            PostId = 9,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            PostId = 9,
                            UserId = 10
                        },
                        new
                        {
                            Id = 10,
                            PostId = 9,
                            UserId = 11
                        },
                        new
                        {
                            Id = 11,
                            PostId = 9,
                            UserId = 12
                        },
                        new
                        {
                            Id = 12,
                            PostId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 13,
                            PostId = 9,
                            UserId = 14
                        },
                        new
                        {
                            Id = 14,
                            PostId = 16,
                            UserId = 15
                        },
                        new
                        {
                            Id = 15,
                            PostId = 16,
                            UserId = 16
                        },
                        new
                        {
                            Id = 16,
                            PostId = 16,
                            UserId = 17
                        },
                        new
                        {
                            Id = 17,
                            PostId = 16,
                            UserId = 18
                        },
                        new
                        {
                            Id = 18,
                            PostId = 16,
                            UserId = 19
                        },
                        new
                        {
                            Id = 19,
                            PostId = 16,
                            UserId = 20
                        },
                        new
                        {
                            Id = 20,
                            PostId = 13,
                            UserId = 1
                        },
                        new
                        {
                            Id = 21,
                            PostId = 13,
                            UserId = 2
                        },
                        new
                        {
                            Id = 22,
                            PostId = 13,
                            UserId = 3
                        },
                        new
                        {
                            Id = 23,
                            PostId = 13,
                            UserId = 4
                        },
                        new
                        {
                            Id = 24,
                            PostId = 13,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Depth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("PostId");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "Great article!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Content = "Totally agree!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 1,
                            PostId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Content = "Thanks Bob!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 2,
                            PostId = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            Content = "I learned a lot.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 1,
                            PostId = 1
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 4,
                            Content = "More please!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 1
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            Content = "Best DB ever!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 2
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            Content = "And so extensible!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 6,
                            PostId = 2
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Content = "Right!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 7,
                            PostId = 2
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            Content = "JSONB support is gold.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 2
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            Content = "Important topic!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 3
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 2,
                            Content = "Couldn't agree more.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 10,
                            PostId = 3
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 3,
                            Content = "But we must act fast.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 11,
                            PostId = 3
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 1,
                            Content = "Need more regulation.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 3
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 4,
                            Content = "Let's be careful.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 3
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            Content = "I love using recursion for tree traversal!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 4
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 6,
                            Content = "Recursion can be tricky with large datasets though.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 15,
                            PostId = 4
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 7,
                            Content = "That's why you need proper base cases.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 16,
                            PostId = 4
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 8,
                            Content = "And be careful about stack overflow.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 17,
                            PostId = 4
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 9,
                            Content = "Tail recursion can help with that.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 5,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 18,
                            PostId = 4
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 10,
                            Content = "Not all languages optimize for tail recursion though.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 6,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 19,
                            PostId = 4
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 11,
                            Content = "Good point! Sometimes iteration is clearer anyway.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 7,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 20,
                            PostId = 4
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 5,
                            Content = "Remote work is here to stay!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = true,
                            Likes = 0,
                            PostId = 5
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 6,
                            Content = "But what about company culture?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 22,
                            PostId = 5
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 7,
                            Content = "I love working remotely.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 5
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 8,
                            Content = "Hybrid models seem best.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = true,
                            Likes = 0,
                            PostId = 5
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 1,
                            Content = "Great tips despite the author being banned!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 6
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 2,
                            Content = "I use these daily.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 6
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 15,
                            Content = "Docker changed my workflow!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 7
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 16,
                            Content = "Containers are the future.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 7
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 3,
                            Content = "Code reviews saved our project!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 8
                        },
                        new
                        {
                            Id = 31,
                            AuthorId = 4,
                            Content = "What process do you follow?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 30,
                            PostId = 8
                        },
                        new
                        {
                            Id = 32,
                            AuthorId = 3,
                            Content = "We use a checklist approach.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 31,
                            PostId = 8
                        },
                        new
                        {
                            Id = 33,
                            AuthorId = 5,
                            Content = "I struggle with giving constructive feedback.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 8
                        },
                        new
                        {
                            Id = 34,
                            AuthorId = 6,
                            Content = "Try focusing on the code, not the person.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 33,
                            PostId = 8
                        },
                        new
                        {
                            Id = 35,
                            AuthorId = 7,
                            Content = "The sandwich approach works well too.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 34,
                            PostId = 8
                        },
                        new
                        {
                            Id = 36,
                            AuthorId = 5,
                            Content = "Thanks for the tips!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 35,
                            PostId = 8
                        },
                        new
                        {
                            Id = 37,
                            AuthorId = 8,
                            Content = "Automated tools can help too.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 8
                        },
                        new
                        {
                            Id = 38,
                            AuthorId = 9,
                            Content = "Any recommendations?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 37,
                            PostId = 8
                        },
                        new
                        {
                            Id = 39,
                            AuthorId = 1,
                            Content = "React is my favorite for large applications.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 40,
                            AuthorId = 2,
                            Content = "Angular has better built-in features.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 41,
                            AuthorId = 3,
                            Content = "Vue is the most approachable for beginners.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 42,
                            AuthorId = 4,
                            Content = "Svelte is revolutionary with its compile-time approach.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 43,
                            AuthorId = 5,
                            Content = "I prefer vanilla JS whenever possible.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 44,
                            AuthorId = 6,
                            Content = "Framework fatigue is real!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 45,
                            AuthorId = 7,
                            Content = "Next.js is a game-changer for React projects.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 46,
                            AuthorId = 8,
                            Content = "The virtual DOM concept changed frontend development.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 9
                        },
                        new
                        {
                            Id = 47,
                            AuthorId = 2,
                            Content = "Service discovery is a challenge with microservices.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 11
                        },
                        new
                        {
                            Id = 48,
                            AuthorId = 3,
                            Content = "Have you tried Consul or etcd?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 47,
                            PostId = 11
                        },
                        new
                        {
                            Id = 49,
                            AuthorId = 2,
                            Content = "Yes, we use Consul with great results.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 48,
                            PostId = 11
                        },
                        new
                        {
                            Id = 50,
                            AuthorId = 4,
                            Content = "How does it handle network partitions?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 49,
                            PostId = 11
                        },
                        new
                        {
                            Id = 51,
                            AuthorId = 2,
                            Content = "It has built-in health checks that help.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 5,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 50,
                            PostId = 11
                        },
                        new
                        {
                            Id = 52,
                            AuthorId = 5,
                            Content = "Data consistency across services is tricky.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 11
                        },
                        new
                        {
                            Id = 53,
                            AuthorId = 6,
                            Content = "Saga pattern can help with that.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 52,
                            PostId = 11
                        },
                        new
                        {
                            Id = 54,
                            AuthorId = 7,
                            Content = "Event sourcing is another approach.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 52,
                            PostId = 11
                        },
                        new
                        {
                            Id = 55,
                            AuthorId = 5,
                            Content = "Can you explain the Saga pattern more?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 53,
                            PostId = 11
                        },
                        new
                        {
                            Id = 56,
                            AuthorId = 6,
                            Content = "It sequences local transactions with compensating actions.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 55,
                            PostId = 11
                        },
                        new
                        {
                            Id = 57,
                            AuthorId = 9,
                            Content = "When will quantum computers become practical?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 12
                        },
                        new
                        {
                            Id = 58,
                            AuthorId = 10,
                            Content = "For certain algorithms, they already are.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 57,
                            PostId = 12
                        },
                        new
                        {
                            Id = 59,
                            AuthorId = 9,
                            Content = "Like which ones?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 58,
                            PostId = 12
                        },
                        new
                        {
                            Id = 60,
                            AuthorId = 10,
                            Content = "Shor's algorithm for factoring large numbers.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 59,
                            PostId = 12
                        },
                        new
                        {
                            Id = 61,
                            AuthorId = 11,
                            Content = "That has implications for cryptography, right?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 5,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 60,
                            PostId = 12
                        },
                        new
                        {
                            Id = 62,
                            AuthorId = 10,
                            Content = "Exactly! Current encryption could be broken.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 6,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 61,
                            PostId = 12
                        },
                        new
                        {
                            Id = 63,
                            AuthorId = 9,
                            Content = "So what's the solution?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 7,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 62,
                            PostId = 12
                        },
                        new
                        {
                            Id = 64,
                            AuthorId = 6,
                            Content = "Automation is the key to successful DevOps.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 13,
                            UpdatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 65,
                            AuthorId = 7,
                            Content = "Agreed! What tools do you recommend?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 64,
                            PostId = 13
                        },
                        new
                        {
                            Id = 66,
                            AuthorId = 6,
                            Content = "Jenkins, Terraform, and Prometheus are my go-to stack.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 65,
                            PostId = 13,
                            UpdatedAt = new DateTime(2025, 4, 5, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 67,
                            AuthorId = 8,
                            Content = "Don't forget about cultural aspects of DevOps.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 13
                        },
                        new
                        {
                            Id = 68,
                            AuthorId = 14,
                            Content = "Python is the best language to start with for ML.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 42,
                            PostId = 14
                        },
                        new
                        {
                            Id = 69,
                            AuthorId = 3,
                            Content = "Absolutely! Scikit-learn makes it so accessible.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 29,
                            ParentId = 68,
                            PostId = 14
                        },
                        new
                        {
                            Id = 70,
                            AuthorId = 5,
                            Content = "Understanding the math is crucial though.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 15,
                            PostId = 14
                        },
                        new
                        {
                            Id = 71,
                            AuthorId = 1,
                            Content = "Any book recommendations for beginners?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 8,
                            PostId = 14
                        },
                        new
                        {
                            Id = 72,
                            AuthorId = 14,
                            Content = "Hands-On Machine Learning by Aurélien Géron is excellent.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 37,
                            ParentId = 71,
                            PostId = 14
                        },
                        new
                        {
                            Id = 73,
                            AuthorId = 1,
                            Content = "Tabs are more accessible and customizable!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 15
                        },
                        new
                        {
                            Id = 74,
                            AuthorId = 2,
                            Content = "But spaces ensure consistent formatting everywhere.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 73,
                            PostId = 15
                        },
                        new
                        {
                            Id = 75,
                            AuthorId = 3,
                            Content = "That's why we have .editorconfig files.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 74,
                            PostId = 15
                        },
                        new
                        {
                            Id = 76,
                            AuthorId = 2,
                            Content = "Not all editors support that though.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 75,
                            PostId = 15
                        },
                        new
                        {
                            Id = 77,
                            AuthorId = 4,
                            Content = "Spaces are the industry standard.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 15
                        },
                        new
                        {
                            Id = 78,
                            AuthorId = 5,
                            Content = "Only because of senior developers' preferences.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 77,
                            PostId = 15
                        },
                        new
                        {
                            Id = 79,
                            AuthorId = 6,
                            Content = "And years of practical experience!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 78,
                            PostId = 15
                        },
                        new
                        {
                            Id = 80,
                            AuthorId = 5,
                            Content = "Appeal to authority fallacy.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 79,
                            PostId = 15
                        },
                        new
                        {
                            Id = 81,
                            AuthorId = 6,
                            Content = "No, it's empirical evidence.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 5,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 80,
                            PostId = 15
                        },
                        new
                        {
                            Id = 82,
                            AuthorId = 7,
                            Content = "Just use both to confuse everyone!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 15
                        },
                        new
                        {
                            Id = 83,
                            AuthorId = 8,
                            Content = "That's pure evil.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 82,
                            PostId = 15
                        },
                        new
                        {
                            Id = 84,
                            AuthorId = 9,
                            Content = "Two-factor authentication is non-negotiable these days.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 45,
                            PostId = 16
                        },
                        new
                        {
                            Id = 85,
                            AuthorId = 10,
                            Content = "What's your preferred 2FA method?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 12,
                            ParentId = 84,
                            PostId = 16
                        },
                        new
                        {
                            Id = 86,
                            AuthorId = 9,
                            Content = "Hardware keys for critical accounts, authenticator apps for others.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 23,
                            ParentId = 85,
                            PostId = 16
                        },
                        new
                        {
                            Id = 87,
                            AuthorId = 11,
                            Content = "Regular security audits saved our company.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 39,
                            PostId = 16
                        },
                        new
                        {
                            Id = 88,
                            AuthorId = 12,
                            Content = "Password managers are essential.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 51,
                            PostId = 16
                        },
                        new
                        {
                            Id = 89,
                            AuthorId = 13,
                            Content = "What about zero-trust architecture?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 8,
                            PostId = 16
                        },
                        new
                        {
                            Id = 90,
                            AuthorId = 7,
                            Content = "Excellent point! I'll cover that in part 2.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 17,
                            ParentId = 89,
                            PostId = 16
                        },
                        new
                        {
                            Id = 91,
                            AuthorId = 8,
                            Content = "Thanks for adding the section on Core Web Vitals!",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 17
                        },
                        new
                        {
                            Id = 92,
                            AuthorId = 19,
                            Content = "You're welcome! It's become so important for SEO.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 91,
                            PostId = 17
                        },
                        new
                        {
                            Id = 93,
                            AuthorId = 4,
                            Content = "The updated examples are much clearer now.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 17
                        },
                        new
                        {
                            Id = 94,
                            AuthorId = 1,
                            Content = "Could you expand on lazy loading in a future update?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 17
                        },
                        new
                        {
                            Id = 95,
                            AuthorId = 16,
                            Content = "We've implemented ADRs with great success.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 18
                        },
                        new
                        {
                            Id = 96,
                            AuthorId = 17,
                            Content = "What template do you use?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 95,
                            PostId = 18
                        },
                        new
                        {
                            Id = 97,
                            AuthorId = 16,
                            Content = "We use Michael Nygard's template with some customizations.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 96,
                            PostId = 18
                        },
                        new
                        {
                            Id = 98,
                            AuthorId = 17,
                            Content = "Could you share those customizations?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 97,
                            PostId = 18
                        },
                        new
                        {
                            Id = 99,
                            AuthorId = 16,
                            Content = "We added sections for security implications and performance considerations.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 5,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 98,
                            PostId = 18
                        },
                        new
                        {
                            Id = 100,
                            AuthorId = 1,
                            Content = "How do you handle updating outdated ADRs?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 18
                        },
                        new
                        {
                            Id = 101,
                            AuthorId = 18,
                            Content = "Don't change old ADRs! Create new ones that supersede them.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 100,
                            PostId = 18
                        },
                        new
                        {
                            Id = 102,
                            AuthorId = 2,
                            Content = "As @user16 mentioned above, clear references are key.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 101,
                            PostId = 18
                        },
                        new
                        {
                            Id = 103,
                            AuthorId = 10,
                            Content = "I prefer using proxies for the Observer pattern in modern JS.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 19
                        },
                        new
                        {
                            Id = 104,
                            AuthorId = 2,
                            Content = "Interesting! Can you elaborate on the advantages?",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 103,
                            PostId = 19
                        },
                        new
                        {
                            Id = 105,
                            AuthorId = 10,
                            Content = "It's more declarative and requires less boilerplate than traditional implementations.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 104,
                            PostId = 19
                        },
                        new
                        {
                            Id = 106,
                            AuthorId = 3,
                            Content = "Singleton is often overused and creates tight coupling.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 19
                        },
                        new
                        {
                            Id = 107,
                            AuthorId = 4,
                            Content = "True, dependency injection is usually a better approach.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 106,
                            PostId = 19
                        },
                        new
                        {
                            Id = 108,
                            AuthorId = 20,
                            Content = "The Factory examples could use more real-world context.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 19
                        },
                        new
                        {
                            Id = 109,
                            AuthorId = 2,
                            Content = "Thanks for the feedback! I'll update with better examples.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 108,
                            PostId = 19
                        },
                        new
                        {
                            Id = 110,
                            AuthorId = 1,
                            Content = "Web Components will finally solve reusability.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 1,
                            IsDeleted = false,
                            Likes = 0,
                            PostId = 20
                        },
                        new
                        {
                            Id = 111,
                            AuthorId = 2,
                            Content = "Custom Elements are already well-supported.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 2,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 110,
                            PostId = 20
                        },
                        new
                        {
                            Id = 112,
                            AuthorId = 3,
                            Content = "Shadow DOM is the game changer here.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 3,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 111,
                            PostId = 20
                        },
                        new
                        {
                            Id = 113,
                            AuthorId = 4,
                            Content = "But the tooling is still immature compared to React.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 4,
                            IsDeleted = true,
                            Likes = 0,
                            ParentId = 112,
                            PostId = 20
                        },
                        new
                        {
                            Id = 114,
                            AuthorId = 5,
                            Content = "Responding to a deleted comment but still relevant.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 5,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 113,
                            PostId = 20
                        },
                        new
                        {
                            Id = 115,
                            AuthorId = 6,
                            Content = "The ecosystem is definitely catching up though.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 6,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 114,
                            PostId = 20
                        },
                        new
                        {
                            Id = 116,
                            AuthorId = 7,
                            Content = "Give it another year and it will be mainstream.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Depth = 7,
                            IsDeleted = false,
                            Likes = 0,
                            ParentId = 115,
                            PostId = 20
                        });
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.DTOs.CommentTreeDto", b =>
                {
                    b.Property<int>("CommentID")
                        .HasColumnType("integer");

                    b.Property<int>("Depth")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("IndentedContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentCommentID")
                        .HasColumnType("integer");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Post", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "Open source software has revolutionized the tech world by fostering collaboration, transparency, and innovation. Projects like Linux, Apache, and PostgreSQL have become the backbone of modern technology infrastructure.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/os.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "The Power of Open Source"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            Content = "PostgreSQL is more than just a relational database. Its robust feature set, extensibility, and standards compliance make it an excellent choice for a wide range of applications, from simple websites to complex data analytics platforms.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/pgsql.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Why I Love PostgreSQL"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 4,
                            Content = "As AI becomes more powerful, we must consider ethical boundaries. The rapid advancement of artificial intelligence technologies raises important questions about privacy, bias, accountability, and the future of work.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/ai.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "AI Ethics in Modern Tech"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 5,
                            Content = "Recursion is a powerful technique in programming where a function calls itself. This article explores how recursion works, when to use it, and common pitfalls to avoid.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/recursion.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Understanding Recursion in Programming"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 12,
                            Content = "The COVID-19 pandemic accelerated the adoption of remote work. This article examines the long-term implications for businesses, employees, and office spaces.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/remote-work.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "The Future of Remote Work"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 12,
                            Content = "Improve your SQL queries with these advanced techniques. Learn about window functions, CTEs, and performance optimization strategies.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/sql-tips.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Advanced SQL Tips"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 9,
                            Content = "Docker simplifies the process of managing application processes in containers. This guide walks you through the basics of containerization.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/docker.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Getting Started with Docker"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 11,
                            Content = "Effective code reviews improve code quality and foster knowledge sharing within teams. This article covers best practices for giving and receiving code review feedback.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/code-review.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "The Art of Code Review"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 10,
                            Content = "This comprehensive comparison of popular JavaScript frameworks examines React, Angular, Vue, Svelte and others across performance, learning curve, and community support metrics.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/js-frameworks.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "JavaScript Frameworks Comparison"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 17,
                            Content = "WebAssembly is a binary instruction format that enables high-performance applications on the web. This article introduces the key concepts and use cases for this emerging technology.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/wasm.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Introduction to WebAssembly"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 16,
                            Content = "Microservices have become a popular architectural style for building complex applications. This article explores common patterns, anti-patterns, and implementation strategies.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/microservices.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Microservices Architecture Patterns"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 14,
                            Content = "This accessible introduction to quantum computing covers qubits, superposition, entanglement, and quantum gates. Learn how quantum computers differ from classical computers and their potential applications.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/quantum.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Quantum Computing Explained"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 6,
                            Content = "Implementing DevOps practices can streamline software delivery and improve team collaboration. This article covers CI/CD, infrastructure as code, and monitoring strategies.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/devops.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "DevOps Best Practices"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 5,
                            Content = "Getting started with machine learning doesn't have to be intimidating. This guide introduces foundational concepts and tools for beginners wanting to enter the field of AI and ML.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/ml-beginners.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Machine Learning for Beginners"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 13,
                            Content = "Code formatting preferences have sparked debates among developers for decades. This lighthearted article examines the pros and cons of using tabs versus spaces for indentation.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/tabs-spaces.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Tabs vs. Spaces: The Eternal Debate"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 7,
                            Content = "Protecting your digital assets is more important than ever. This comprehensive guide covers the fundamentals of cybersecurity for individuals and small businesses.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/cybersecurity.jpg",
                            IsDeleted = false,
                            Likes = 156,
                            Title = "Cybersecurity Essentials"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 19,
                            Content = "Speed matters for user experience and SEO. This guide explores techniques for optimizing frontend performance, from code splitting to image optimization.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/frontend-perf.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Frontend Performance Optimization",
                            UpdatedAt = new DateTime(2025, 4, 7, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 18,
                            Content = "Documenting architectural decisions is crucial for team alignment and knowledge preservation. This article introduces Architecture Decision Records (ADRs) as a lightweight documentation method.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/adr.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Software Architecture Decision Records"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 2,
                            Content = "Classical design patterns remain relevant in modern JavaScript development. This article examines how patterns like Observer, Factory, and Singleton can be implemented using ES6+ features.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/js-patterns.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "Design Patterns in Modern JavaScript"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 13,
                            Content = "Web development continues to evolve at a rapid pace. This article explores emerging trends like Web Components, WebAssembly, Edge Computing, and Progressive Web Apps that are shaping the future.",
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://example.com/future-web.jpg",
                            IsDeleted = false,
                            Likes = 0,
                            Title = "The Future of Web Development"
                        });
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutMe")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<char>("Gender")
                        .HasColumnType("CHAR");

                    b.Property<bool>("IsBanned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastLoginAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("None");

                    b.Property<string>("ProviderId")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UserImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutMe = "Tech lover and open source contributor.",
                            Birthday = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/alice.jpg",
                            Username = "alice"
                        },
                        new
                        {
                            Id = 2,
                            AboutMe = "Full-stack developer and PostgreSQL fan.",
                            Birthday = new DateTime(1988, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/bob.jpg",
                            Username = "bob"
                        },
                        new
                        {
                            Id = 3,
                            AboutMe = "Database engineer and tech writer.",
                            Birthday = new DateTime(1995, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/charlie.jpg",
                            Username = "charlie"
                        },
                        new
                        {
                            Id = 4,
                            AboutMe = "UI/UX designer and frontend developer.",
                            Birthday = new DateTime(1992, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dana@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/dana.jpg",
                            Username = "dana"
                        },
                        new
                        {
                            Id = 5,
                            AboutMe = "Data scientist and ML enthusiast.",
                            Birthday = new DateTime(1993, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/emily.jpg",
                            Username = "emily"
                        },
                        new
                        {
                            Id = 6,
                            AboutMe = "DevOps engineer and cloud architect.",
                            Birthday = new DateTime(1985, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "frank@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/frank.jpg",
                            Username = "frank"
                        },
                        new
                        {
                            Id = 7,
                            AboutMe = "Cybersecurity specialist and bug bounty hunter.",
                            Birthday = new DateTime(1991, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "grace@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/grace.jpg",
                            Username = "grace"
                        },
                        new
                        {
                            Id = 8,
                            AboutMe = "Mobile app developer and UX enthusiast.",
                            Birthday = new DateTime(1994, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "henry@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/henry.jpg",
                            Username = "henry"
                        },
                        new
                        {
                            Id = 9,
                            AboutMe = "Blockchain developer and cryptocurrency researcher.",
                            Birthday = new DateTime(1989, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "isabella@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/isabella.jpg",
                            Username = "isabella"
                        },
                        new
                        {
                            Id = 10,
                            AboutMe = "Game developer and 3D graphics programmer.",
                            Birthday = new DateTime(1990, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jack@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/jack.jpg",
                            Username = "jack"
                        },
                        new
                        {
                            Id = 11,
                            AboutMe = "Technical writer and documentation specialist.",
                            Birthday = new DateTime(1987, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kate@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/kate.jpg",
                            Username = "kate"
                        },
                        new
                        {
                            Id = 12,
                            AboutMe = "QA engineer and test automation expert.",
                            Birthday = new DateTime(1996, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "liam@example.com",
                            Gender = 'M',
                            IsBanned = true,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/liam.jpg",
                            Username = "liam"
                        },
                        new
                        {
                            Id = 13,
                            AboutMe = "Project manager and agile coach.",
                            Birthday = new DateTime(1993, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mia@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/mia.jpg",
                            Username = "mia"
                        },
                        new
                        {
                            Id = 14,
                            AboutMe = "Data engineer and big data specialist.",
                            Birthday = new DateTime(1991, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "noah@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/noah.jpg",
                            Username = "noah"
                        },
                        new
                        {
                            Id = 15,
                            AboutMe = "UX researcher and accessibility advocate.",
                            Birthday = new DateTime(1994, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "olivia@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = true,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/olivia.jpg",
                            Username = "olivia"
                        },
                        new
                        {
                            Id = 16,
                            AboutMe = "Systems architect and performance tuning specialist.",
                            Birthday = new DateTime(1988, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "peter@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/peter.jpg",
                            Username = "peter"
                        },
                        new
                        {
                            Id = 17,
                            AboutMe = "API designer and integration specialist.",
                            Birthday = new DateTime(1995, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quinn@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/quinn.jpg",
                            Username = "quinn"
                        },
                        new
                        {
                            Id = 18,
                            AboutMe = "IoT developer and embedded systems engineer.",
                            Birthday = new DateTime(1992, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ryan@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/ryan.jpg",
                            Username = "ryan"
                        },
                        new
                        {
                            Id = 19,
                            AboutMe = "AR/VR developer and 3D modeling expert.",
                            Birthday = new DateTime(1990, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophia@example.com",
                            Gender = 'F',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/sophia.jpg",
                            Username = "sophia"
                        },
                        new
                        {
                            Id = 20,
                            AboutMe = "SRE and infrastructure automation specialist.",
                            Birthday = new DateTime(1989, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thomas@example.com",
                            Gender = 'M',
                            IsBanned = false,
                            IsDeleted = false,
                            LastLoginAt = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$nOUninm9W4BPkMNkzX5tfeEpK8ZY7zIsGvFjnmUGB6RFXlP3ZaCmi",
                            Provider = "None",
                            UserImageUrl = "https://example.com/images/thomas.jpg",
                            Username = "thomas"
                        });
                });

            modelBuilder.Entity("TreeTalk.Model.Entities.CommentLike", b =>
                {
                    b.HasOne("TreeTalkModel.Model.Entities.Comment", "Comment")
                        .WithMany("CommentLikes")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreeTalkModel.Model.Entities.User", "User")
                        .WithMany("CommentLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TreeTalk.Model.Entities.PostLike", b =>
                {
                    b.HasOne("TreeTalkModel.Model.Entities.Post", "Post")
                        .WithMany("PostLikes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreeTalkModel.Model.Entities.User", "User")
                        .WithMany("PostLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.Comment", b =>
                {
                    b.HasOne("TreeTalkModel.Model.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TreeTalkModel.Model.Entities.Comment", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TreeTalkModel.Model.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.Post", b =>
                {
                    b.HasOne("TreeTalkModel.Model.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.Comment", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("CommentLikes");
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostLikes");
                });

            modelBuilder.Entity("TreeTalkModel.Model.Entities.User", b =>
                {
                    b.Navigation("CommentLikes");

                    b.Navigation("Comments");

                    b.Navigation("PostLikes");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
